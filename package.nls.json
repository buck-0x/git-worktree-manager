{
    "cmd.switchWorkTree": "Switch worktree",
    "cmd.switchToSelectFolder": "The current window switches to this folder",
    "cmd.freshWorkTree": "Refresh worktree",
    "cmd.refreshGitFolder": "Refresh git folder",
    "cmd.refreshFolder": "Refresh folder",
    "cmd.addWorkTree": "Add worktree",
    "cmd.addGitFolder": "Add git repository",
    "cmd.renameGitFolder": "Rename this git repository",
    "cmd.removeGitFolder": "Remove this git repository",
    "cmd.removeWorkTree": "Delete worktree",
    "cmd.addWorkTreeFromBranch": "Create a worktree from the current branch",
    "cmd.revealInSystemExplorer": "Reveal in the system explorer",
    "cmd.repairWorkTree": "Repair worktree",
    "cmd.moveWorkTree": "Move worktree",
    "cmd.lockWorkTree": "Lock worktree",
    "cmd.unlockWorkTree": "Unlock worktree",
    "cmd.pruneWorkTree": "Prune worktree",
    "cmd.openTerminal": "Open in VSCode built-in terminal",
    "cmd.openWindowsTerminal": "Open in Windows terminal",
    "cmd.addToWorkspace": "Add to workspace",
    "cmd.copyFilePath": "Copy file path",
    "cmd.openRecent": "Open recently used folders and files",
    "cmd.addToGitFolder": "Save git repository",
    "sizeBar.git-worktree-manager": "worktree manager",
    "view.git-worktree-manager-list": "worktree list",
    "view.git-worktree-manager-folders": "git repository manage",
    "view.git-worktree-manager-recent": "recently opened folders",
    "view.git-worktree-manager-setting": "git worktree setting",
    "viewsWelcome.addWorkTree": "Add worktree",
    "viewsWelcome.setting": "Setting",
    "config.title": "Git Worktree Manager setting",
    "config.terminalLocationInEditor.description": "Whether to open the built-in terminal in the editor, it opens in the panel by default",
    "config.terminalCmdList.description": "Send command text when opening the terminal, such as node -v",
    "config.windowsTerminalInvoke.description": "Evoke Windows Terminal",
    "msg.error.addWorkTree": "Failed to create Worktree\n{0}",
    "msg.info.createWorkTree": "Create Worktree for",
    "msg.placeholder.createWorkTree": "Choose a branch to create new worktree for",
    "msg.pickItem.useCurrentBranch": "Create a worktree using the current commit hash",
    "msg.title.switchWorkTree": "Worktree switch",
    "msg.placeHolder.switchWorkTree": "Please select the directory to switch",
    "msg.modal.title.createWorkTree": "Create worktree",
    "msg.modal.detail.createWorkTree": "A worktree with {1} {2} is created under {0}",
    "msg.modal.title.openFolder": "Open folder",
    "msg.modal.detail.openFolder": "Whether to open the new worktree in a new window?",
    "msg.modal.title.pickFolder": "Select the folder",
    "msg.modal.detail.pickFolder": "Select the folder where you want to create the worktree?",
    "msg.modal.detail.moveToFolder": "Select the new location to move the Worktree's folder from {0}",
    "msg.modal.title.deleteWorkTree": "Delete worktree",
    "msg.modal.detail.deleteWorkTree": "The worktree for the {0} folder will be deleted",
    "msg.modal.title.pruneWorkTree": "The following Worktree folder will be deleted",
    "msg.modal.title.addGitFolder": "Add a git repository folder path",
    "msg.modal.detail.addGitFolder": "Please select the git repository folder path",
    "msg.modal.title.inputGitFolderName": "Enter the name of the repository for the showcase",
    "msg.modal.title.renameGitFolder": "Rename the git repository alias",
    "msg.modal.title.removeGitFolder": "Remove the git repository reference in list",
    "msg.modal.placeholder.removeGitFolder": "Are you sure to delete this repository reference with path {0} and alias {1}?",
    "msg.modal.placeholder.inputGitFolderName": "Please enter a name for the presentation",
    "msg.modal.title.pickMainFolder": "Select main folder?",
    "msg.modal.placeholder.pickMainFolder": "The currently selected folder {0} is not the main folder,\nwhether to switch to the main folder {1}",
    "msg.modal.title.selectCmd": "Select command",
    "msg.modal.placeholder.selectCmd": "Select the command you need to execute in the terminal",
    "msg.success.deleteWorkTree": "Successfully deleted the worktree for the {0} folder",
    "msg.fail.deleteWorkTree": "Worktree removal failed\n\n {0}",
    "msg.success.commonAction": "Worktree {0} successfully",
    "msg.fail.commonAction": "Worktree {0} failed {1}",
    "msg.success.moveWorkTree": "Worktree moved successfully",
    "msg.fail.moveWorkTree": "Worktree move failed \n\n {0}",
    "msg.fail.switchWorkTree": "Switching worktree failed \n\n {0}",
    "msg.fail.invokeWindowsTerminal": "Opening Windows terminal failed\n\n {0}",
    "msg.success.pruneWorkTree": "Prune worktree succeeded",
    "msg.fail.pruneWorkTree": "Failed to prune worktree \n\n {0}",
    "msg.error.invalidGitFolder": "The folder is not a git repository available",
    "msg.error.gitFolderExistInSetting": "The git repository folder already exists in the settings",
    "msg.success.save": "Saved successfully",
    "msg.success.copy": "Copied successfully: {0}",
    "msg.success.remove": "Remove successfully",
    "treeView.tooltip.click": "*Click to open new window for this worktree*\n\n",
    "treeView.tooltip.folder": "$(folder) Folder {0}\n\n",
    "commit": "commit",
    "branch": "branch",
    "commitHash": "commit hash",
    "treeView.tooltip.error": "$(error) Detached from the git version\n\n",
    "treeView.tooltip.lock": "$(lock) The worktree is locked to prevent accidental purging\n\n",
    "treeView.tooltip.main": "âœ¨ Worktree main folder, cannot be cleared and locked\n\n",
    "ok": "ok",
    "operation": "operation",
    "lock": "lock",
    "unlock": "unlock",
    "repair": "repair",
    "close": "Close"
}