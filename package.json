{
  "publisher": "jackiotyu",
  "name": "git-worktree-manager",
  "displayName": "Git Worktree Manager",
  "description": "",
  "version": "0.0.4",
  "engines": {
    "vscode": "^1.60.0"
  },
  "categories": [
    "Other",
    "SCM Providers"
  ],
  "keywords": [
    "git",
    "worktree",
    "git worktree",
    "manager",
    "switch branch"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/jackiotyu/git-worktree-manager.git"
  },
  "bugs": {
    "url": "https://github.com/jackiotyu/git-worktree-manager/issues"
  },
  "icon": "images/icon.png",
  "activationEvents": [],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "git-worktree-manager.switchWorkTree",
        "title": "%cmd.switchWorkTree%"
      },
      {
        "command": "git-worktree-manager.switchToSelectWorkTree",
        "title": "%cmd.switchToSelectWorkTree%",
        "icon": "$(arrow-right)"
      },
      {
        "command": "git-worktree-manager.refreshWorkTree",
        "title": "%cmd.freshWorkTree%",
        "icon": "$(refresh)"
      },
      {
        "command": "git-worktree-manager.refreshGitFolder",
        "title": "%cmd.refreshGitFolder%",
        "icon": "$(refresh)"
      },
      {
        "command": "git-worktree-manager.addWorkTree",
        "title": "%cmd.addWorkTree%",
        "icon": "$(add)"
      },
      {
        "command": "git-worktree-manager.addGitFolder",
        "title": "%cmd.addGitFolder%",
        "icon": "$(add)"
      },
      {
        "command": "git-worktree-manager.removeWorkTree",
        "title": "%cmd.removeWorkTree%",
        "icon": "$(close)"
      },
      {
        "command": "git-worktree-manager.addWorkTreeFromBranch",
        "title": "%cmd.addWorkTreeFromBranch%",
        "icon": "$(add)"
      },
      {
        "command": "git-worktree-manager.revealInSystemExplorer",
        "title": "%cmd.revealInSystemExplorer%"
      },
      {
        "command": "git-worktree-manager.repairWorkTree",
        "title": "%cmd.repairWorkTree%"
      },
      {
        "command": "git-worktree-manager.moveWorkTree",
        "title": "%cmd.moveWorkTree%"
      },
      {
        "command": "git-worktree-manager.lockWorkTree",
        "title": "%cmd.lockWorkTree%",
        "icon": "$(lock)"
      },
      {
        "command": "git-worktree-manager.unlockWorkTree",
        "title": "%cmd.unlockWorkTree%",
        "icon": "$(unlock)"
      },
      {
        "command": "git-worktree-manager.pruneWorkTree",
        "title": "%cmd.pruneWorkTree%",
        "icon": "$(wand)"
      },
      {
        "command": "git-worktree-manager.removeGitFolder",
        "title": "%cmd.removeGitFolder%",
        "icon": "$(close)"
      },
      {
        "command": "git-worktree-manager.renameGitFolder",
        "title": "%cmd.renameGitFolder%",
        "icon": "$(edit)"
      },
      {
        "command": "git-worktree-manager.openTerminal",
        "title": "%cmd.openTerminal%"
      },
      {
        "command": "git-worktree-manager.openWindowsTerminal",
        "title": "%cmd.openWindowsTerminal%"
      },
      {
        "command": "git-worktree-manager.addToWorkspace",
        "title": "%cmd.addToWorkspace%"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "git-worktree-manager",
          "icon": "images/icon.svg",
          "title": "%sizeBar.git-worktree-manager%"
        }
      ]
    },
    "views": {
      "git-worktree-manager": [
        {
          "id": "git-worktree-manager-list",
          "name": "%view.git-worktree-manager-list%",
          "visibility": "visible"
        },
        {
          "id": "git-worktree-manager-folders",
          "name": "%view.git-worktree-manager-folders%",
          "visibility": "visible"
        },
        {
          "id": "git-worktree-manager-setting",
          "name": "%view.git-worktree-manager-setting%",
          "visibility": "visible"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "git-worktree-manager-setting",
        "contents": "[ $(add) 新建 worktree ](command:git-worktree-manager.addWorkTree)",
        "when": "git-worktree-manager.locale == zh-cn"
      },
      {
        "view": "git-worktree-manager-setting",
        "contents": "[ $(gear) 打开插件设置 ](command:git-worktree-manager.openSetting)",
        "when": "git-worktree-manager.locale == zh-cn"
      },
      {
        "view": "git-worktree-manager-setting",
        "contents": "[ $(add) Add worktree ](command:git-worktree-manager.addWorkTree)",
        "when": "git-worktree-manager.locale != zh-cn"
      },
      {
        "view": "git-worktree-manager-setting",
        "contents": "[ $(gear) Open Setting ](command:git-worktree-manager.openSetting)",
        "when": "git-worktree-manager.locale != zh-cn"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "git-worktree-manager.refreshWorkTree",
          "when": "view == git-worktree-manager-list",
          "group": "navigation@100"
        },
        {
          "command": "git-worktree-manager.addWorkTree",
          "when": "view === git-worktree-manager-list",
          "group": "navigation@1"
        },
        {
          "command": "git-worktree-manager.pruneWorkTree",
          "when": "view === git-worktree-manager-list",
          "group": "navigation@2"
        },
        {
          "command": "git-worktree-manager.addGitFolder",
          "when": "view === git-worktree-manager-folders",
          "group": "navigation@1"
        },
        {
          "command": "git-worktree-manager.refreshGitFolder",
          "when": "view === git-worktree-manager-folders",
          "group": "navigation@1"
        }
      ],
      "view/item/context": [
        {
          "command": "git-worktree-manager.openTerminal",
          "when": "viewItem == git-worktree-manager.gitFolderItem || viewItem =~ /git-worktree-manager.worktreeItem/",
          "group": "terminal@2"
        },
        {
          "command": "git-worktree-manager.openWindowsTerminal",
          "when": "viewItem == git-worktree-manager.gitFolderItem || viewItem =~ /git-worktree-manager.worktreeItem/",
          "group": "terminal@1"
        },
        {
          "command": "git-worktree-manager.removeWorkTree",
          "when": "viewItem =~ /git-worktree-manager.worktreeItem/ && !(viewItem =~ /git-worktree-manager\\.worktreeItem(.*)\\.main/)",
          "group": "worktree-delete"
        },
        {
          "command": "git-worktree-manager.addWorkTreeFromBranch",
          "when": "view === git-worktree-manager-list && viewItem == git-worktree-manager.branchItem",
          "group": "worktree-action"
        },
        {
          "command": "git-worktree-manager.revealInSystemExplorer",
          "when": "viewItem =~ /git-worktree-manager.worktreeItem/ || viewItem == git-worktree-manager.gitFolderItem",
          "group": "file-action@0"
        },
        {
          "command": "git-worktree-manager.switchToSelectWorkTree",
          "when": "viewItem =~ /git-worktree-manager.worktreeItem/",
          "group": "inline@100"
        },
        {
          "command": "git-worktree-manager.repairWorkTree",
          "when": "viewItem =~ /git-worktree-manager.worktreeItem/",
          "group": "worktree-action"
        },
        {
          "command": "git-worktree-manager.moveWorkTree",
          "when": "viewItem =~ /git-worktree-manager.worktreeItem/",
          "group": "worktree-action"
        },
        {
          "command": "git-worktree-manager.lockWorkTree",
          "when": "viewItem =~ /git-worktree-manager.worktreeItem.unlock/",
          "group": "inline"
        },
        {
          "command": "git-worktree-manager.unlockWorkTree",
          "when": "viewItem =~ /git-worktree-manager.worktreeItem.lock/",
          "group": "inline"
        },
        {
          "command": "git-worktree-manager.renameGitFolder",
          "when": "viewItem == git-worktree-manager.gitFolderItem",
          "group": "inline"
        },
        {
          "command": "git-worktree-manager.removeGitFolder",
          "when": "viewItem == git-worktree-manager.gitFolderItem",
          "group": "inline@100"
        },
        {
          "command": "git-worktree-manager.addToWorkspace",
          "when": "viewItem =~ /git-worktree-manager.worktreeItem/ && !(viewItem =~ /git-worktree-manager\\.worktreeItem(.*)\\.current/)",
          "group": "workspace"
        }
      ],
      "commandPalette": [
        {
          "command": "git-worktree-manager.switchToSelectWorkTree",
          "when": "false",
          "icon": "$(arrow-right)"
        },
        {
          "command": "git-worktree-manager.refreshWorkTree",
          "when": "false",
          "icon": "$(refresh)"
        },
        {
          "command": "git-worktree-manager.refreshGitFolder",
          "when": "false",
          "icon": "$(refresh)"
        },
        {
          "command": "git-worktree-manager.addWorkTree",
          "when": "false",
          "icon": "$(add)"
        },
        {
          "command": "git-worktree-manager.addGitFolder",
          "when": "false",
          "icon": "$(add)"
        },
        {
          "command": "git-worktree-manager.removeWorkTree",
          "when": "false",
          "icon": "$(close)"
        },
        {
          "command": "git-worktree-manager.addWorkTreeFromBranch",
          "when": "false",
          "icon": "$(add)"
        },
        {
          "command": "git-worktree-manager.revealInSystemExplorer",
          "when": "false"
        },
        {
          "command": "git-worktree-manager.repairWorkTree",
          "when": "false"
        },
        {
          "command": "git-worktree-manager.moveWorkTree",
          "when": "false"
        },
        {
          "command": "git-worktree-manager.lockWorkTree",
          "when": "false",
          "icon": "$(lock)"
        },
        {
          "command": "git-worktree-manager.unlockWorkTree",
          "when": "false",
          "icon": "$(unlock)"
        },
        {
          "command": "git-worktree-manager.pruneWorkTree",
          "when": "false",
          "icon": "$(wand)"
        },
        {
          "command": "git-worktree-manager.removeGitFolder",
          "when": "false"
        },
        {
          "command": "git-worktree-manager.renameGitFolder",
          "when": "false"
        },
        {
          "command": "git-worktree-manager.openTerminal",
          "when": "false"
        },
        {
          "command": "git-worktree-manager.openWindowsTerminal",
          "when": "false"
        }
      ]
    },
    "configuration": {
      "title": "%config.title%",
      "properties": {
        "git-worktree-manager.gitFolders": {
          "scope": "application",
          "type": "array",
          "description": "%config.gitFolders.description%",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "description": "%config.gitFolders.items.name.description%",
                "type": "string"
              },
              "path": {
                "type": "string",
                "description": "%config.gitFolders.items.path.description%"
              }
            }
          }
        },
        "git-worktree-manager.terminalLocationInEditor": {
          "scope": "application",
          "type": "boolean",
          "default": false,
          "description": "%config.terminalLocationInEditor.description%"
        },
        "git-worktree-manager.terminalCmd": {
          "scope": "application",
          "type": "string",
          "default": "",
          "description": "%config.terminalCmd.description%"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "yarn run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "yarn run compile-tests && yarn run compile && yarn run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/lodash": "^4.14.197",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@types/vscode": "^1.60.0",
    "@typescript-eslint/eslint-plugin": "^5.59.1",
    "@typescript-eslint/parser": "^5.59.1",
    "@vscode/test-electron": "^2.3.0",
    "eslint": "^8.39.0",
    "glob": "^8.1.0",
    "mocha": "^10.2.0",
    "ts-loader": "^9.4.2",
    "typescript": "^5.0.4",
    "webpack": "^5.81.0",
    "webpack-cli": "^5.0.2"
  },
  "dependencies": {
    "dayjs": "^1.11.9",
    "lodash": "^4.17.21",
    "vscode-nls-i18n": "^0.2.4"
  }
}
